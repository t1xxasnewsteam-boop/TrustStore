// –ü–æ–∏—Å–∫ –ø–æ —Ç–æ–≤–∞—Ä–∞–º Trust Store

// –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤
const products = [
    { 
        name: 'ChatGPT Plus', 
        url: 'product', 
        category: 'AI –ì–µ–Ω–µ—Ä–∞—Ü–∏—è', 
        price: '–æ—Ç 2 250 ‚ÇΩ', 
        image: 'gpt-image.png',
        aliases: ['—á–∞—Ç–¥–∂–∏–ø–∏—Ç–∏', '—á–∞—Ç –¥–∂–∏–ø–∏—Ç–∏', '—á–∞—Ç', '–¥–∂–∏–ø–∏—Ç–∏', '–≥–ø—Ç', 'chatgpt', 'gpt']
    },
    { 
        name: 'Midjourney', 
        url: 'midjourney', 
        category: 'AI –ì–µ–Ω–µ—Ä–∞—Ü–∏—è', 
        price: '–æ—Ç 500 ‚ÇΩ', 
        image: 'midjourney-image.png',
        aliases: ['–º–∏–¥–∂–æ—Ä–Ω–∏', '–º–∏–¥–∂—ë—Ä–Ω–∏', '–º–∏–¥–¥–∂–æ—Ä–Ω–∏', 'midjourney', 'mj']
    },
    { 
        name: '–õ–∏—á–Ω—ã–π VPN', 
        url: 'vpn', 
        category: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', 
        price: '–æ—Ç 500 ‚ÇΩ', 
        image: 'vpn-image.png',
        aliases: ['–≤–ø–Ω', '–≤–∏–Ω', 'vpn', '–≤–µ–ø–µ—ç–Ω']
    },
    { 
        name: 'Google Gemini', 
        url: 'gemini', 
        category: 'AI –ì–µ–Ω–µ—Ä–∞—Ü–∏—è', 
        price: '–æ—Ç 2 250 ‚ÇΩ', 
        image: 'gemini-image.png',
        aliases: ['–≥–µ–º–∏–Ω–∏', '–¥–∂–µ–º–∏–Ω–∏', '–≥—É–≥–ª', 'gemini', 'google']
    },
    { 
        name: 'Gemini Veo 3', 
        url: 'gemini', 
        category: 'AI –ì–µ–Ω–µ—Ä–∞—Ü–∏—è', 
        price: '–æ—Ç 2 250 ‚ÇΩ', 
        image: 'gemini-image.png',
        aliases: ['–≥–µ–º–∏–Ω–∏', '–¥–∂–µ–º–∏–Ω–∏', '–≥—É–≥–ª', 'veo', '–≤–µ–æ']
    },
    { 
        name: 'Cursor AI Pro', 
        url: 'cursor', 
        category: 'AI –ì–µ–Ω–µ—Ä–∞—Ü–∏—è', 
        price: '–æ—Ç 2 250 ‚ÇΩ', 
        image: 'cursor-image.png',
        aliases: ['–∫—É—Ä—Å–æ—Ä', '–∫—É—Ä–∑–æ—Ä', 'cursor', '–∫—ë—Ä—Å–æ—Ä']
    },
    { 
        name: 'Claude AI Pro', 
        url: 'claude', 
        category: 'AI –ì–µ–Ω–µ—Ä–∞—Ü–∏—è', 
        price: '–æ—Ç 2 250 ‚ÇΩ', 
        image: 'claude-image.png',
        aliases: ['–∫–ª–æ–¥', '–∫–ª–∞—É–¥', 'claude']
    },
    { 
        name: 'YouTube Premium', 
        url: 'youtube', 
        category: '–í–∏–¥–µ–æ', 
        price: '–æ—Ç 800 ‚ÇΩ', 
        image: 'youtube-image.png',
        aliases: ['—é—Ç—É–±', '—é—Ç—é–±', 'youtube', '—é—Ç—å—é–±', '–º—É–∑—ã–∫–∞']
    },
    { 
        name: 'Music Premium', 
        url: 'youtube', 
        category: '–í–∏–¥–µ–æ', 
        price: '–æ—Ç 800 ‚ÇΩ', 
        image: 'youtube-image.png',
        aliases: ['–º—É–∑—ã–∫–∞', '–º—é–∑–∏–∫', 'music', '—é—Ç—É–± –º—É–∑—ã–∫–∞']
    },
    { 
        name: 'Adobe Creative Cloud', 
        url: 'adobe', 
        category: '–î–∏–∑–∞–π–Ω', 
        price: '–æ—Ç 1 700 ‚ÇΩ', 
        image: 'adobe-image.png',
        aliases: ['–∞–¥–æ–±', '–∞–¥–æ–±–µ', 'adobe', '—Ñ–æ—Ç–æ—à–æ–ø', 'photoshop']
    },
    { 
        name: 'CapCut Pro', 
        url: 'capcut', 
        category: '–ú–æ–Ω—Ç–∞–∂', 
        price: '–æ—Ç 1 250 ‚ÇΩ', 
        image: 'capcut-image.png',
        aliases: ['–∫–∞–ø–∫–∞—Ç', '–∫–∞–ø–∫—É—Ç', 'capcut', '–º–æ–Ω—Ç–∞–∂']
    },
    { 
        name: 'VPN', 
        url: 'vpn', 
        category: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', 
        price: '–æ—Ç 500 ‚ÇΩ', 
        image: 'vpn-image.png',
        aliases: ['–≤–ø–Ω', '–≤–∏–Ω', 'vpn', '–≤–µ–ø–µ—ç–Ω']
    }
];

// –û—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ–∏—Å–∫–∞
const searchModal = document.getElementById('search-modal');
const searchInput = document.getElementById('search-input');
const searchResults = document.getElementById('search-results');
const searchButton = document.querySelector('.btn-icon:first-child'); // –ö–Ω–æ–ø–∫–∞ –ª—É–ø—ã
const closeSearchButton = document.getElementById('close-search');

// –û—Ç–∫—Ä—ã—Ç—å –ø–æ–∏—Å–∫
searchButton.addEventListener('click', () => {
    searchModal.style.display = 'flex';
    searchInput.focus();
    searchInput.value = '';
    searchResults.innerHTML = '';
});

// –ó–∞–∫—Ä—ã—Ç—å –ø–æ–∏—Å–∫ –ø–æ –∫–Ω–æ–ø–∫–µ
closeSearchButton.addEventListener('click', () => {
    searchModal.style.display = 'none';
});

// –ó–∞–∫—Ä—ã—Ç—å –ø–æ–∏—Å–∫ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
searchModal.addEventListener('click', (e) => {
    if (e.target === searchModal) {
        searchModal.style.display = 'none';
    }
});

// –ó–∞–∫—Ä—ã—Ç—å –ø–æ–∏—Å–∫ –ø–æ ESC
document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && searchModal.style.display === 'flex') {
        searchModal.style.display = 'none';
    }
});

// –ü–æ–∏—Å–∫ –ø–æ —Ç–æ–≤–∞—Ä–∞–º
searchInput.addEventListener('input', (e) => {
    const query = e.target.value.toLowerCase().trim();
    
    if (query === '') {
        searchResults.innerHTML = '';
        return;
    }
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã (–∏—â–µ–º –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é, –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –∞–ª–∏–∞—Å–∞–º)
    const filteredProducts = products.filter(product => {
        const nameMatch = product.name.toLowerCase().includes(query);
        const categoryMatch = product.category.toLowerCase().includes(query);
        const aliasMatch = product.aliases && product.aliases.some(alias => 
            alias.toLowerCase().includes(query)
        );
        return nameMatch || categoryMatch || aliasMatch;
    });
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    if (filteredProducts.length === 0) {
        searchResults.innerHTML = `
            <div class="search-no-results">
                <div class="no-results-icon">üòî</div>
                <h3>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h3>
                <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å</p>
            </div>
        `;
    } else {
        searchResults.innerHTML = filteredProducts.map(product => `
            <a href="${product.url}" class="search-result-item">
                <img src="${product.image}" alt="${product.name}" class="search-result-image">
                <div class="search-result-info">
                    <h4>${highlightText(product.name, query)}</h4>
                    <p><span class="search-category">${product.category}</span> ‚Ä¢ ${product.price}</p>
                </div>
                <div class="search-result-arrow">‚Üí</div>
            </a>
        `).join('');
    }
});

// –ü–æ–¥—Å–≤–µ—Ç–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –≤ —Ç–µ–∫—Å—Ç–µ
function highlightText(text, query) {
    const regex = new RegExp(`(${query})`, 'gi');
    return text.replace(regex, '<mark>$1</mark>');
}

