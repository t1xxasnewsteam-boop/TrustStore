#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä—É—á–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç—É
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 *   node manual-send-order.js [orderId]
 *   node manual-send-order.js  # –æ—Ç–ø—Ä–∞–≤–∏—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑
 */

const http = require('http');
const https = require('https');

const SERVER_URL = process.env.SERVER_URL || 'http://localhost:3000';
const API_ENDPOINT = '/api/manual-send-last-order';

const orderId = process.argv[2];

console.log('\nüì§ –†–£–ß–ù–ê–Ø –û–¢–ü–†–ê–í–ö–ê –ó–ê–ö–ê–ó–ê\n');
console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');

if (orderId) {
    console.log(`üéØ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞: ${orderId}\n`);
} else {
    console.log('üéØ –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞\n');
}

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–æ—Ç–æ–∫–æ–ª
const url = new URL(SERVER_URL);
const isHttps = url.protocol === 'https:';
const client = isHttps ? https : http;

const requestData = orderId ? JSON.stringify({ orderId }) : '{}';
const options = {
    hostname: url.hostname,
    port: url.port || (isHttps ? 443 : 80),
    path: orderId ? `${API_ENDPOINT}?orderId=${orderId}` : API_ENDPOINT,
    method: 'POST',
    headers: {
        'Content-Type': 'application/json',
        'Content-Length': Buffer.byteLength(requestData)
    }
};

console.log(`üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É: ${SERVER_URL}`);
console.log(`üîó Endpoint: ${API_ENDPOINT}\n`);

const req = client.request(options, (res) => {
    let data = '';
    
    res.on('data', (chunk) => {
        data += chunk;
    });
    
    res.on('end', () => {
        try {
            const result = JSON.parse(data);
            
            if (res.statusCode === 200 && result.success) {
                console.log('‚úÖ –ó–ê–ö–ê–ó –£–°–ü–ï–®–ù–û –û–¢–ü–†–ê–í–õ–ï–ù!\n');
                console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
                console.log(`   üÜî Order ID: ${result.orderId}`);
                console.log(`   üìß Email –∫–ª–∏–µ–Ω—Ç–∞: ${result.email}`);
                console.log(`   ‚úÖ Emails –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${result.emailsSent}`);
                console.log(`   ‚ùå –û—à–∏–±–æ–∫: ${result.emailsFailed}`);
                console.log(`   üì± Telegram: ${result.telegramSent ? '‚úÖ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ' : '‚ùå –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ'}`);
                
                if (result.emailsFailed > 0) {
                    console.log('\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ë—ã–ª–∏ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ email!');
                    console.log('   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP –∏–ª–∏ SendGrid –≤ .env');
                }
                
                console.log('\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');
            } else {
                console.error('‚ùå –û–®–ò–ë–ö–ê –û–¢–ü–†–ê–í–ö–ò –ó–ê–ö–ê–ó–ê\n');
                console.error('–î–µ—Ç–∞–ª–∏:', result);
                process.exit(1);
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞:', error.message);
            console.error('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', data);
            process.exit(1);
        }
    });
});

req.on('error', (error) => {
    console.error('‚ùå –û–®–ò–ë–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö –°–ï–†–í–ï–†–£\n');
    console.error(`   ${error.message}\n`);
    console.error('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:');
    console.error('   1. –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω? (node server.js)');
    console.error(`   2. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π URL? (${SERVER_URL})`);
    console.error('   3. –î–æ—Å—Ç—É–ø–µ–Ω –ª–∏ —Å–µ—Ä–≤–µ—Ä –∏–∑ —Å–µ—Ç–∏?');
    console.error('\n   –î–ª—è —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–π:');
    console.error('   SERVER_URL=https://truststore.ru node manual-send-order.js');
    process.exit(1);
});

req.write(requestData);
req.end();

