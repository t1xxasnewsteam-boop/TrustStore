const fetch = require('node-fetch');
const TOKEN = '7268320384:AAGngFsmkg_x-2rryDtoJkmYD3ymxy5gM9o';

async function checkRecent() {
    const url = `https://api.telegram.org/bot${TOKEN}/getUpdates?limit=100`;
    const response = await fetch(url);
    const data = await response.json();
    
    if (!data.ok) {
        console.log('‚ùå –û–®–ò–ë–ö–ê API:', data.description);
        return;
    }
    
    console.log('\nüîç –ü–†–û–í–ï–†–Ø–Æ –ü–û–°–õ–ï–î–ù–ò–ï 5 –ú–ò–ù–£–¢:\n');
    
    const now = Math.floor(Date.now() / 1000); // –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ Unix
    const fiveMinutesAgo = now - (5 * 60); // 5 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –º–∏–Ω—É—Ç
    const recentMessages = data.result.filter(update => {
        if (!update.message) return false;
        return update.message.date >= fiveMinutesAgo;
    });
    
    console.log(`‚è∞ –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU', {timeZone: 'Europe/Moscow'})}`);
    console.log(`üì® –í—Å–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: ${data.result.length}`);
    console.log(`üÜï –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –º–∏–Ω—É—Ç: ${recentMessages.length}\n`);
    
    if (recentMessages.length === 0) {
        console.log('‚ùå –ù–ï–¢ –°–û–û–ë–©–ï–ù–ò–ô –ó–ê –ü–û–°–õ–ï–î–ù–ò–ï 5 –ú–ò–ù–£–¢\n');
        return;
    }
    
    console.log('üí¨ –°–û–û–ë–©–ï–ù–ò–Ø –ó–ê –ü–û–°–õ–ï–î–ù–ò–ï 5 –ú–ò–ù–£–¢:\n');
    
    recentMessages.forEach((update, i) => {
        const msg = update.message;
        const from = msg.from.first_name + ' ' + (msg.from.last_name || '');
        const text = (msg.text || msg.caption || '').substring(0, 80);
        const replyTo = msg.reply_to_message ? msg.reply_to_message.message_id : '–ù–ï–¢';
        const chatTitle = msg.chat.title || msg.chat.type;
        const isBot = msg.from.is_bot ? 'ü§ñ –ë–û–¢' : 'üë§ –ß–µ–ª–æ–≤–µ–∫';
        const messageTime = new Date(msg.date * 1000).toLocaleString('ru-RU', {timeZone: 'Europe/Moscow'});
        const secondsAgo = now - msg.date;
        
        console.log(`${i+1}. ${isBot} | –û—Ç: ${from}`);
        console.log(`   ‚è∞ –í—Ä–µ–º—è: ${messageTime} (${secondsAgo} —Å–µ–∫ –Ω–∞–∑–∞–¥)`);
        console.log(`   üì± –ß–∞—Ç: ${chatTitle}`);
        console.log(`   üí¨ –¢–µ–∫—Å—Ç: "${text}"`);
        console.log(`   üîó –û—Ç–≤–µ—Ç –Ω–∞ –ø–æ—Å—Ç: ${replyTo}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –ø–æ–¥ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –±–æ—Ç–∞ (–ø–æ—Å—Ç #15)
        const isTrustStoreChannel = msg.from.username && msg.from.username.toLowerCase() === 'truststoreru';
        
        if (isTrustStoreChannel) {
            console.log(`   ‚è≠Ô∏è –û–¢–í–ï–¢ –û–¢ –ö–ê–ù–ê–õ–ê - –±—É–¥–µ—Ç –ø—Ä–æ–ø—É—â–µ–Ω`);
        } else if (msg.reply_to_message && msg.reply_to_message.message_id === 15 && !msg.from.is_bot && text.length >= 5) {
            console.log(`   ‚úÖ –≠–¢–û–¢ –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô –ë–£–î–ï–¢ –î–û–ë–ê–í–õ–ï–ù!`);
        } else if (msg.reply_to_message) {
            console.log(`   ‚ùå –û—Ç–≤–µ—Ç –Ω–∞ –ø–æ—Å—Ç #${msg.reply_to_message.message_id}, –∞ –Ω–µ #15`);
        } else {
            console.log(`   ‚ùå –ù–µ –æ—Ç–≤–µ—Ç –Ω–∞ –ø–æ—Å—Ç`);
        }
        console.log('');
    });
    
    // –°—á–∏—Ç–∞–µ–º —Å–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ
    const willBeAdded = recentMessages.filter(update => {
        const msg = update.message;
        const text = msg.text || msg.caption || '';
        const isTrustStoreChannel = msg.from.username && msg.from.username.toLowerCase() === 'truststoreru';
        
        return msg.reply_to_message 
            && msg.reply_to_message.message_id === 15
            && !msg.from.is_bot
            && !isTrustStoreChannel
            && text.length >= 5
            && !text.includes('o-4zWa6SFWUGo');
    });
    
    console.log('\nüìä –ò–¢–û–ì –ó–ê –ü–û–°–õ–ï–î–ù–ò–ï 5 –ú–ò–ù–£–¢:');
    console.log(`   –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${recentMessages.length}`);
    console.log(`   –ë—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ: ${willBeAdded.length}\n`);
    
    if (willBeAdded.length > 0) {
        console.log('‚úÖ –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò, –ö–û–¢–û–†–´–ï –ë–£–î–£–¢ –î–û–ë–ê–í–õ–ï–ù–´:\n');
        willBeAdded.forEach((update, i) => {
            const msg = update.message;
            const from = msg.from.first_name + ' ' + (msg.from.last_name || '');
            const text = msg.text || msg.caption || '';
            console.log(`${i+1}. ${from}: "${text}"`);
        });
        console.log('');
    } else {
        console.log('‚ùå –ù–ï–¢ –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í –î–õ–Ø –î–û–ë–ê–í–õ–ï–ù–ò–Ø\n');
    }
}

checkRecent();

