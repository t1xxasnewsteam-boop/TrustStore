// Cart Widget functionality

// Toggle cart widget
function toggleCartWidget() {
    const widget = document.getElementById('cartWidget');
    const overlay = document.getElementById('cartWidgetOverlay');
    
    widget.classList.toggle('active');
    overlay.classList.toggle('active');
    
    if (widget.classList.contains('active')) {
        displayCartWidget();
    }
}

// Close cart widget
function closeCartWidget() {
    const widget = document.getElementById('cartWidget');
    const overlay = document.getElementById('cartWidgetOverlay');
    
    widget.classList.remove('active');
    overlay.classList.remove('active');
}

// Display cart items in widget
function displayCartWidget() {
    const cart = getCart();
    const itemsContainer = document.getElementById('cartWidgetItems');
    
    if (cart.length === 0) {
        itemsContainer.innerHTML = `
            <div class="cart-widget-empty">
                <div class="cart-widget-empty-icon">üõí</div>
                <h4>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</h4>
                <p>–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞</p>
                <button class="cart-widget-empty-btn" onclick="closeCartWidget(); window.location.href='/catalog'">
                    –í –∫–∞—Ç–∞–ª–æ–≥
                </button>
            </div>
        `;
        
        // Hide footer if empty
        document.getElementById('cartWidgetFooter').style.display = 'none';
        return;
    }
    
    // Show footer if not empty
    document.getElementById('cartWidgetFooter').style.display = 'block';
    
    // Calculate total
    let totalPrice = 0;
    
    // Render items with quantity
    const itemsHTML = cart.map((item, index) => {
        const unitPrice = item.unitPrice || item.price;
        const quantity = item.quantity || 1;
        const itemTotal = unitPrice * quantity;
        totalPrice += itemTotal;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ —É —Ç–æ–≤–∞—Ä–∞
        const promoHTML = item.appliedPromo ? 
            `<div style="display: inline-flex; align-items: center; gap: 4px; margin-top: 4px; padding: 3px 8px; background: linear-gradient(135deg, #26de81 0%, #20bf6b 100%); border-radius: 6px;">
                <span style="font-size: 10px; font-weight: 600; color: white;">üé´ ${item.appliedPromo.code} (-${item.appliedPromo.discount}%)</span>
            </div>` : '';
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ä—É—é —Ü–µ–Ω—É –∏ —Å–∫–∏–¥–∫—É
        let priceHTML;
        if (item.appliedPromo) {
            const originalPrice = Math.round(itemTotal / (1 - item.appliedPromo.discount / 100));
            priceHTML = `
                <div style="display: flex; flex-direction: column; gap: 4px; align-items: flex-start;">
                    <div style="display: flex; align-items: center; gap: 6px;">
                        <div style="text-decoration: line-through; color: #999; font-size: 12px;">${originalPrice.toLocaleString('ru-RU')} ‚ÇΩ</div>
                        <div style="background: linear-gradient(135deg, #26de81 0%, #20bf6b 100%); color: white; padding: 2px 6px; border-radius: 4px; font-size: 10px; font-weight: 600;">
                            -${item.appliedPromo.discount}%
                        </div>
                    </div>
                    <div class="cart-widget-item-price">${itemTotal.toLocaleString('ru-RU')} ‚ÇΩ</div>
                </div>
            `;
        } else {
            priceHTML = `<div class="cart-widget-item-price">${itemTotal.toLocaleString('ru-RU')} ‚ÇΩ</div>`;
        }
        
        return `
            <div class="cart-widget-item">
                <div class="cart-widget-item-image">
                    <img src="${item.image || 'logo.png'}" alt="${item.name}">
                </div>
                <div class="cart-widget-item-info">
                    <div class="cart-widget-item-title">${item.name}</div>
                    <div class="cart-widget-item-duration">${item.duration}</div>
                    ${promoHTML}
                    <div class="cart-widget-item-bottom">
                        ${priceHTML}
                        <div class="widget-quantity-controls">
                            <button class="widget-quantity-btn" onclick="decreaseWidgetQuantity(${index})">‚àí</button>
                            <input type="text" class="widget-quantity-input" value="${quantity}" 
                                   onchange="updateWidgetQuantityManual(${index}, this.value)"
                                   onkeypress="return handleQuantityKeypress(event)">
                            <button class="widget-quantity-btn" onclick="increaseWidgetQuantity(${index})">+</button>
                        </div>
                    </div>
                </div>
                <button class="cart-widget-item-remove" onclick="removeFromCartWidget(${index})" title="–£–¥–∞–ª–∏—Ç—å">√ó</button>
            </div>
        `;
    }).join('');
    
    itemsContainer.innerHTML = itemsHTML;
    
    // Update total
    document.getElementById('cartWidgetTotalPrice').textContent = `${totalPrice.toLocaleString('ru-RU')} ‚ÇΩ`;
}

// –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞ –≤ –≤–∏–¥–∂–µ—Ç–µ
function increaseWidgetQuantity(index) {
    const cart = getCart();
    if (!cart[index].quantity) cart[index].quantity = 1;
    if (!cart[index].unitPrice) cart[index].unitPrice = cart[index].price;
    
    cart[index].quantity += 1;
    saveCart(cart);
    displayCartWidget();
}

// –£–º–µ–Ω—å—à–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞ –≤ –≤–∏–¥–∂–µ—Ç–µ
function decreaseWidgetQuantity(index) {
    const cart = getCart();
    const item = cart[index];
    
    if (!item.quantity) item.quantity = 1;
    
    // –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ = 1, —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    if (item.quantity === 1) {
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã?')) {
            removeFromCartWidget(index);
        }
        return;
    }
    
    // –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
    item.quantity -= 1;
    saveCart(cart);
    displayCartWidget();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤—Ä—É—á–Ω—É—é –≤ –≤–∏–¥–∂–µ—Ç–µ
function updateWidgetQuantityManual(index, value) {
    const cart = getCart();
    const numValue = parseInt(value);
    
    // –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω 0 –∏–ª–∏ –Ω–µ —á–∏—Å–ª–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    if (isNaN(numValue) || numValue <= 0) {
        displayCartWidget(); // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Å –∏—Å—Ö–æ–¥–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
        return;
    }
    
    if (!cart[index].quantity) cart[index].quantity = 1;
    if (!cart[index].unitPrice) cart[index].unitPrice = cart[index].price;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
    cart[index].quantity = numValue;
    saveCart(cart);
    displayCartWidget();
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–ª–∞–≤–∏—à –≤ –ø–æ–ª–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
function handleQuantityKeypress(event) {
    const key = event.key;
    
    // –†–∞–∑—Ä–µ—à–∞–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã, –Ω–æ –∑–∞–ø—Ä–µ—â–∞–µ–º 0 –∫–∞–∫ –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª
    if (key === '0' && event.target.value === '') {
        event.preventDefault();
        return false;
    }
    
    // –†–∞–∑—Ä–µ—à–∞–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã
    if (!/[0-9]/.test(key)) {
        event.preventDefault();
        return false;
    }
    
    return true;
}

// Remove item from cart (from widget)
function removeFromCartWidget(index) {
    const cart = getCart();
    cart.splice(index, 1);
    saveCart(cart); // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º saveCart –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ localStorage + cookies
    
    // Update widget
    displayCartWidget();
    
    // Show notification
    showNotification('‚úÖ –¢–æ–≤–∞—Ä —É–¥–∞–ª—ë–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã');
}

// Show notification
function showNotification(message) {
    const notification = document.createElement('div');
    notification.innerHTML = `
        <div style="position: fixed; bottom: 90px; right: 20px; background: white; padding: 15px 20px; border-radius: 15px; box-shadow: 0 10px 30px rgba(0,0,0,0.15); z-index: 10001; animation: slideIn 0.5s ease;">
            <div style="display: flex; align-items: center; gap: 10px;">
                <span style="font-weight: 600; color: #1a1a1a;">${message}</span>
            </div>
        </div>
    `;
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.style.animation = 'slideOut 0.5s ease';
        setTimeout(() => notification.remove(), 500);
    }, 2000);
}

// Checkout from widget
function checkoutFromWidget() {
    const cart = getCart();
    if (cart.length === 0) return;
    
    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ checkout —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º fromCart=true
    // Checkout —Å–∞–º –∑–∞–≥—Ä—É–∑–∏—Ç –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
    window.location.href = '/checkout?fromCart=true';
}

// Initialize cart widget on page load
document.addEventListener('DOMContentLoaded', function() {
    // Close widget on overlay click
    const overlay = document.getElementById('cartWidgetOverlay');
    if (overlay) {
        overlay.addEventListener('click', closeCartWidget);
    }
    
    // Close widget on Escape key
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            closeCartWidget();
        }
    });
});

